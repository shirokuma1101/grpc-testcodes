/* バージョン */
syntax = "proto3";

/* パッケージ */
// 名前の衝突回避(名前空間)
package quick_start;

/* インポート */
// 他の.protoで定義したメッセージ型を仕様する場合
//import "hoge.proto";

/* サービス */
// RPCのインターフェースの集合体
service QuickStartServices {
  /* RPC */
  // RPCのインターフェースを定義
  rpc SayHello (HelloRequest) returns (HelloResponse) {}
}

/* メッセージ型 */
// 構造体やクラスとして書き出される
message HelloRequest {
  /* メンバ変数 */
  // 後ろの数字はタグナンバーでメッセージ型内で一意である必要がある
  string prefix = 1;
  string message = 2;
}

message HelloResponse {
  string message = 1;
}

/* note */

// protoの型とC++側での型
// proto    | C++
//----------|--------|
// double   | double |
// float    | float  |
// int32    | int32  | 可変長エンコーディング 負の数値の場合は非効率 sint32推奨
// int64    | int64  | 可変長エンコーディング 負の数値の場合は非効率 sint64推奨
// uint32   | uint32 | 可変長エンコーディング
// uint64   | uint64 | 可変長エンコーディング
// sint32   | int32  | 可変長エンコーディング 効率的に負の数値をエンコード
// sint64   | int64  | 可変長エンコーディング 効率的に負の数値をエンコード
// fixed32  | uint32 | 常に4バイト
// fixed64  | uint64 | 常に8バイト
// sfixed32 | int32  | 常に4バイト
// sfixed64 | int64  | 常に8バイト
// bool     | bool   |
// string   | string | 2^32未満の常にUTF-8または7ビットASCIIである必要がある
// bytes    | string | 2^32未満の任意のバイトシーケンスを含めることができる